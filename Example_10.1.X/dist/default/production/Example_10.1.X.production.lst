

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 22 15:30:10 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  007CB7                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for _arr
    27  007CB7  31                 	db	49
    28  007CB8  32                 	db	50
    29  007CB9  33                 	db	51
    30  007CBA  41                 	db	65
    31  007CBB  34                 	db	52
    32  007CBC  35                 	db	53
    33  007CBD  36                 	db	54
    34  007CBE  42                 	db	66
    35  007CBF  37                 	db	55
    36  007CC0  38                 	db	56
    37  007CC1  39                 	db	57
    38  007CC2  43                 	db	67
    39  007CC3  2A                 	db	42
    40  007CC4  30                 	db	48
    41  007CC5  23                 	db	35
    42  007CC6  44                 	db	68
    43                           
    44                           ;initializer for _config_1
    45  007CC7  2C                 	db	44
    46  0000                     _PIE1bits	set	3997
    47  0000                     _PIR1bits	set	3998
    48  0000                     _PORTB	set	3969
    49  0000                     _PORTBbits	set	3969
    50  0000                     _RCREG	set	4014
    51  0000                     _RCSTA	set	4011
    52  0000                     _RCSTAbits	set	4011
    53  0000                     _SPBRG	set	4015
    54  0000                     _SPBRGH	set	4016
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISCbits	set	3988
    57  0000                     _TRISD	set	3989
    58  0000                     _TXREG	set	4013
    59  0000                     _TXSTA	set	4012
    60  0000                     _TXSTAbits	set	4012
    61                           
    62                           ; #config settings
    63  0000                     
    64                           	psect	cinit
    65  007D24                     __pcinit:
    66                           	opt stack 0
    67  007D24                     start_initialization:
    68                           	opt stack 0
    69  007D24                     __initialization:
    70                           	opt stack 0
    71                           
    72                           ; Clear objects allocated to COMRAM (1 bytes)
    73  007D24  6A28               	clrf	__pbssCOMRAM& (0+255),c
    74                           
    75                           ; Initialize objects allocated to COMRAM (17 bytes)
    76                           ; load TBLPTR registers with __pidataCOMRAM
    77  007D26  0EB7               	movlw	low __pidataCOMRAM
    78  007D28  6EF6               	movwf	tblptrl,c
    79  007D2A  0E7C               	movlw	high __pidataCOMRAM
    80  007D2C  6EF7               	movwf	tblptrh,c
    81  007D2E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    82  007D30  6EF8               	movwf	tblptru,c
    83  007D32  EE00  F017         	lfsr	0,__pdataCOMRAM
    84  007D36  EE10 F011          	lfsr	1,17
    85  007D3A                     copy_data0:
    86  007D3A  0009               	tblrd		*+
    87  007D3C  CFF5 FFEE          	movff	tablat,postinc0
    88  007D40  50E5               	movf	postdec1,w,c
    89  007D42  50E1               	movf	fsr1l,w,c
    90  007D44  E1FA               	bnz	copy_data0
    91  007D46                     end_of_initialization:
    92                           	opt stack 0
    93  007D46                     __end_of__initialization:
    94                           	opt stack 0
    95  007D46  0100               	movlb	0
    96  007D48  EF85  F03E         	goto	_main	;jump to C main() function
    97                           tblptru	equ	0xFF8
    98                           tblptrh	equ	0xFF7
    99                           tblptrl	equ	0xFF6
   100                           tablat	equ	0xFF5
   101                           postinc0	equ	0xFEE
   102                           postdec1	equ	0xFE5
   103                           fsr1l	equ	0xFE1
   104                           
   105                           	psect	bssCOMRAM
   106  000028                     __pbssCOMRAM:
   107                           	opt stack 0
   108  000028                     _USART_Status:
   109                           	opt stack 0
   110  000028                     	ds	1
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           postinc0	equ	0xFEE
   116                           postdec1	equ	0xFE5
   117                           fsr1l	equ	0xFE1
   118                           
   119                           	psect	dataCOMRAM
   120  000017                     __pdataCOMRAM:
   121                           	opt stack 0
   122  000017                     _arr:
   123                           	opt stack 0
   124  000017                     	ds	16
   125  000027                     _config_1:
   126                           	opt stack 0
   127  000027                     	ds	1
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           tblptrl	equ	0xFF6
   131                           tablat	equ	0xFF5
   132                           postinc0	equ	0xFEE
   133                           postdec1	equ	0xFE5
   134                           fsr1l	equ	0xFE1
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	opt stack 0
   139  000001                     WriteUSART@data:
   140                           	opt stack 0
   141  000001                     Delay1KTCYx@unit:
   142                           	opt stack 0
   143  000001                     OpenUSART@spbrg:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147  000001                     	ds	1
   148  000002                     delay_ms@t:
   149                           	opt stack 0
   150  000002                     Write@c:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x1
   154  000002                     	ds	1
   155  000003                     ??_OpenUSART:
   156  000003                     delay_ms@i:
   157                           	opt stack 0
   158  000003                     Write@data:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x2
   162  000003                     	ds	1
   163  000004                     Print_key@a:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x3
   167  000004                     	ds	1
   168  000005                     Print_key@element:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x4
   172  000005                     	ds	1
   173  000006                     _Get_key$94:
   174                           	opt stack 0
   175  000006                     OpenUSART@config:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x5
   179  000006                     	ds	1
   180  000007                     _Get_key$95:
   181                           	opt stack 0
   182  000007                     ConfigUSART@config_2:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0x6
   186  000007                     	ds	1
   187  000008                     _Get_key$96:
   188                           	opt stack 0
   189  000008                     ConfigUSART@config_1:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x7
   193  000008                     	ds	1
   194  000009                     _Get_key$97:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x8
   198  000009                     	ds	1
   199  00000A                     _Get_key$98:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x9
   203  00000A                     	ds	1
   204  00000B                     _Get_key$99:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0xA
   208  00000B                     	ds	1
   209  00000C                     _Get_key$100:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0xB
   213  00000C                     	ds	1
   214  00000D                     _Get_key$101:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0xC
   218  00000D                     	ds	1
   219  00000E                     _Get_key$102:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xD
   223  00000E                     	ds	1
   224  00000F                     _Get_key$103:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0xE
   228  00000F                     	ds	1
   229  000010                     _Get_key$104:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  000010                     	ds	1
   234  000011                     _Get_key$105:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x10
   238  000011                     	ds	1
   239  000012                     _Get_key$106:
   240                           	opt stack 0
   241                           
   242                           ; 1 bytes @ 0x11
   243  000012                     	ds	1
   244  000013                     _Get_key$107:
   245                           	opt stack 0
   246                           
   247                           ; 1 bytes @ 0x12
   248  000013                     	ds	1
   249  000014                     _Get_key$108:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x13
   253  000014                     	ds	1
   254  000015                     _Get_key$109:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x14
   258  000015                     	ds	1
   259  000016                     Get_key@row:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x15
   263  000016                     	ds	1
   264  000017                     tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           ; 0 bytes @ 0x16
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 49 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;		None               void
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : 0/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   292 ;;      Params:         0       0       0       0       0       0       0       0       0
   293 ;;      Locals:         0       0       0       0       0       0       0       0       0
   294 ;;      Temps:          0       0       0       0       0       0       0       0       0
   295 ;;      Totals:         0       0       0       0       0       0       0       0       0
   296 ;;Total ram usage:        0 bytes
   297 ;; Hardware stack levels required when called:    4
   298 ;; This function calls:
   299 ;;		_ConfigUSART
   300 ;;		_Get_key
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text0
   307  007D0A                     __ptext0:
   308                           	opt stack 0
   309  007D0A                     _main:
   310                           	opt stack 27
   311                           
   312                           ;main.c: 51: TRISD = 0XF0;
   313                           
   314                           ;incstack = 0
   315  007D0A  0EF0               	movlw	240
   316  007D0C  6E95               	movwf	3989,c	;volatile
   317                           
   318                           ;main.c: 52: TRISB = 0x00;
   319  007D0E  0E00               	movlw	0
   320  007D10  6E93               	movwf	3987,c	;volatile
   321                           
   322                           ;main.c: 53: ConfigUSART(config_1, ((20000000/9600/64)-1));
   323  007D12  0E1F               	movlw	31
   324  007D14  6E07               	movwf	ConfigUSART@config_2,c
   325  007D16  5027               	movf	_config_1,w,c
   326  007D18  EC4B  F03E         	call	_ConfigUSART
   327                           
   328                           ;main.c: 54: Get_key();
   329  007D1C  ECF1  F03E         	call	_Get_key	;wreg free
   330  007D20  EF00  F000         	goto	start
   331  007D24                     __end_of_main:
   332                           	opt stack 0
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341 ;; *************** function _Get_key *****************
   342 ;; Defined at:
   343 ;;		line 107 in file "KeyFn.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;  row             1   21[COMRAM] unsigned char 
   348 ;; Return value:  Size  Location     Type
   349 ;;		None               void
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   357 ;;      Params:         0       0       0       0       0       0       0       0       0
   358 ;;      Locals:        17       0       0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0
   360 ;;      Totals:        17       0       0       0       0       0       0       0       0
   361 ;;Total ram usage:       17 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    3
   364 ;; This function calls:
   365 ;;		_Print_key
   366 ;;		_delay_ms
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373  007DE2                     __ptext1:
   374                           	opt stack 0
   375  007DE2                     _Get_key:
   376                           	opt stack 27
   377                           
   378                           ;KeyFn.c: 109: unsigned char row;
   379                           ;KeyFn.c: 110: TRISB = 0xF0;
   380                           
   381                           ;incstack = 0
   382  007DE2  0EF0               	movlw	240
   383  007DE4  6E93               	movwf	3987,c	;volatile
   384  007DE6                     l21:
   385                           
   386                           ;KeyFn.c: 113: {
   387                           ;KeyFn.c: 114: PORTB = 0X0F;
   388  007DE6  0E0F               	movlw	15
   389  007DE8  6E81               	movwf	3969,c	;volatile
   390                           
   391                           ;KeyFn.c: 115: row = PORTB;
   392  007DEA  CF81 F016          	movff	3969,Get_key@row	;volatile
   393                           
   394                           ;KeyFn.c: 116: row &= 0xF0;
   395  007DEE  0EF0               	movlw	240
   396  007DF0  1616               	andwf	Get_key@row,f,c
   397                           
   398                           ;KeyFn.c: 117: }while(row!=0x00);
   399  007DF2  6616               	tstfsz	Get_key@row,c
   400  007DF4  D7F8               	goto	l21
   401                           
   402                           ;KeyFn.c: 119: delay_ms(100);
   403  007DF6  0E64               	movlw	100
   404  007DF8  EC78  F03E         	call	_delay_ms
   405  007DFC                     l1380:
   406                           
   407                           ;KeyFn.c: 125: {
   408                           ;KeyFn.c: 126: PORTB = 0X0F;
   409  007DFC  0E0F               	movlw	15
   410  007DFE  6E81               	movwf	3969,c	;volatile
   411                           
   412                           ;KeyFn.c: 127: row = PORTB;
   413  007E00  CF81 F016          	movff	3969,Get_key@row	;volatile
   414                           
   415                           ;KeyFn.c: 128: row &= 0xF0;
   416  007E04  0EF0               	movlw	240
   417  007E06  1616               	andwf	Get_key@row,f,c
   418                           
   419                           ;KeyFn.c: 129: }while(row==0x00);
   420  007E08  5016               	movf	Get_key@row,w,c
   421  007E0A  B4D8               	btfsc	status,2,c
   422  007E0C  D7F7               	goto	l1380
   423  007E0E                     l1388:
   424                           
   425                           ;KeyFn.c: 133: {
   426                           ;KeyFn.c: 134: PORTB = 0X08;
   427  007E0E  0E08               	movlw	8
   428  007E10  6E81               	movwf	3969,c	;volatile
   429                           
   430                           ;KeyFn.c: 135: if(Print_key((PORTBbits.RB7)&&(PORTBbits.RB3),arr[0][0]))
   431  007E12  0E00               	movlw	0
   432  007E14  6E06               	movwf	_Get_key$94,c
   433  007E16  BE81               	btfsc	3969,7,c	;volatile
   434  007E18  A681               	btfss	3969,3,c	;volatile
   435  007E1A  D002               	goto	l1396
   436  007E1C  0E01               	movlw	1
   437  007E1E  6E06               	movwf	_Get_key$94,c
   438  007E20                     l1396:
   439  007E20  C017  F004         	movff	_arr,Print_key@a
   440  007E24  5006               	movf	_Get_key$94,w,c
   441  007E26  ECA6  F03E         	call	_Print_key
   442  007E2A  0900               	iorlw	0
   443  007E2C  A4D8               	btfss	status,2,c
   444  007E2E  D0E7               	goto	l88
   445                           
   446                           ;KeyFn.c: 137: else if(Print_key((PORTBbits.RB6)&&(PORTBbits.RB3), arr[0][1]))
   447                           
   448                           ;KeyFn.c: 136: break;
   449  007E30  0E00               	movlw	0
   450  007E32  6E07               	movwf	_Get_key$95,c
   451  007E34  BC81               	btfsc	3969,6,c	;volatile
   452  007E36  A681               	btfss	3969,3,c	;volatile
   453  007E38  D002               	goto	l1410
   454  007E3A  0E01               	movlw	1
   455  007E3C  6E07               	movwf	_Get_key$95,c
   456  007E3E                     l1410:
   457  007E3E  C018  F004         	movff	_arr+1,Print_key@a
   458  007E42  5007               	movf	_Get_key$95,w,c
   459  007E44  ECA6  F03E         	call	_Print_key
   460  007E48  0900               	iorlw	0
   461  007E4A  A4D8               	btfss	status,2,c
   462  007E4C  D0D8               	goto	l88
   463                           
   464                           ;KeyFn.c: 139: else if(Print_key((PORTBbits.RB5)&&(PORTBbits.RB3), arr[0][2]))
   465                           
   466                           ;KeyFn.c: 138: break;
   467  007E4E  0E00               	movlw	0
   468  007E50  6E08               	movwf	_Get_key$96,c
   469  007E52  BA81               	btfsc	3969,5,c	;volatile
   470  007E54  A681               	btfss	3969,3,c	;volatile
   471  007E56  D002               	goto	l1424
   472  007E58  0E01               	movlw	1
   473  007E5A  6E08               	movwf	_Get_key$96,c
   474  007E5C                     l1424:
   475  007E5C  C019  F004         	movff	_arr+2,Print_key@a
   476  007E60  5008               	movf	_Get_key$96,w,c
   477  007E62  ECA6  F03E         	call	_Print_key
   478  007E66  0900               	iorlw	0
   479  007E68  A4D8               	btfss	status,2,c
   480  007E6A  D0C9               	goto	l88
   481                           
   482                           ;KeyFn.c: 141: else if(Print_key((PORTBbits.RB4)&&(PORTBbits.RB3), arr[0][3]))
   483                           
   484                           ;KeyFn.c: 140: break;
   485  007E6C  0E00               	movlw	0
   486  007E6E  6E09               	movwf	_Get_key$97,c
   487  007E70  B881               	btfsc	3969,4,c	;volatile
   488  007E72  A681               	btfss	3969,3,c	;volatile
   489  007E74  D002               	goto	l1438
   490  007E76  0E01               	movlw	1
   491  007E78  6E09               	movwf	_Get_key$97,c
   492  007E7A                     l1438:
   493  007E7A  C01A  F004         	movff	_arr+3,Print_key@a
   494  007E7E  5009               	movf	_Get_key$97,w,c
   495  007E80  ECA6  F03E         	call	_Print_key
   496  007E84  0900               	iorlw	0
   497  007E86  A4D8               	btfss	status,2,c
   498  007E88  D0BA               	goto	l88
   499                           
   500                           ;KeyFn.c: 144: PORTB = 0X04;
   501                           
   502                           ;KeyFn.c: 142: break;
   503  007E8A  0E04               	movlw	4
   504  007E8C  6E81               	movwf	3969,c	;volatile
   505                           
   506                           ;KeyFn.c: 145: if(Print_key((PORTBbits.RB7)&&(PORTBbits.RB2), arr[1][0]))
   507  007E8E  0E00               	movlw	0
   508  007E90  6E0A               	movwf	_Get_key$98,c
   509  007E92  BE81               	btfsc	3969,7,c	;volatile
   510  007E94  A481               	btfss	3969,2,c	;volatile
   511  007E96  D002               	goto	l1450
   512  007E98  0E01               	movlw	1
   513  007E9A  6E0A               	movwf	_Get_key$98,c
   514  007E9C                     l1450:
   515  007E9C  C01B  F004         	movff	_arr+4,Print_key@a
   516  007EA0  500A               	movf	_Get_key$98,w,c
   517  007EA2  ECA6  F03E         	call	_Print_key
   518  007EA6  0900               	iorlw	0
   519  007EA8  A4D8               	btfss	status,2,c
   520  007EAA  D0A9               	goto	l88
   521                           
   522                           ;KeyFn.c: 147: else if(Print_key((PORTBbits.RB6)&&(PORTBbits.RB2), arr[1][1]))
   523                           
   524                           ;KeyFn.c: 146: break;
   525  007EAC  0E00               	movlw	0
   526  007EAE  6E0B               	movwf	_Get_key$99,c
   527  007EB0  BC81               	btfsc	3969,6,c	;volatile
   528  007EB2  A481               	btfss	3969,2,c	;volatile
   529  007EB4  D002               	goto	l1464
   530  007EB6  0E01               	movlw	1
   531  007EB8  6E0B               	movwf	_Get_key$99,c
   532  007EBA                     l1464:
   533  007EBA  C01C  F004         	movff	_arr+5,Print_key@a
   534  007EBE  500B               	movf	_Get_key$99,w,c
   535  007EC0  ECA6  F03E         	call	_Print_key
   536  007EC4  0900               	iorlw	0
   537  007EC6  A4D8               	btfss	status,2,c
   538  007EC8  D09A               	goto	l88
   539                           
   540                           ;KeyFn.c: 149: else if(Print_key((PORTBbits.RB5)&&(PORTBbits.RB2), arr[1][2]))
   541                           
   542                           ;KeyFn.c: 148: break;
   543  007ECA  0E00               	movlw	0
   544  007ECC  6E0C               	movwf	_Get_key$100,c
   545  007ECE  BA81               	btfsc	3969,5,c	;volatile
   546  007ED0  A481               	btfss	3969,2,c	;volatile
   547  007ED2  D002               	goto	l1478
   548  007ED4  0E01               	movlw	1
   549  007ED6  6E0C               	movwf	_Get_key$100,c
   550  007ED8                     l1478:
   551  007ED8  C01D  F004         	movff	_arr+6,Print_key@a
   552  007EDC  500C               	movf	_Get_key$100,w,c
   553  007EDE  ECA6  F03E         	call	_Print_key
   554  007EE2  0900               	iorlw	0
   555  007EE4  A4D8               	btfss	status,2,c
   556  007EE6  D08B               	goto	l88
   557                           
   558                           ;KeyFn.c: 151: else if(Print_key((PORTBbits.RB4)&&(PORTBbits.RB2), arr[1][3]))
   559                           
   560                           ;KeyFn.c: 150: break;
   561  007EE8  0E00               	movlw	0
   562  007EEA  6E0D               	movwf	_Get_key$101,c
   563  007EEC  B881               	btfsc	3969,4,c	;volatile
   564  007EEE  A481               	btfss	3969,2,c	;volatile
   565  007EF0  D002               	goto	l1492
   566  007EF2  0E01               	movlw	1
   567  007EF4  6E0D               	movwf	_Get_key$101,c
   568  007EF6                     l1492:
   569  007EF6  C01E  F004         	movff	_arr+7,Print_key@a
   570  007EFA  500D               	movf	_Get_key$101,w,c
   571  007EFC  ECA6  F03E         	call	_Print_key
   572  007F00  0900               	iorlw	0
   573  007F02  A4D8               	btfss	status,2,c
   574  007F04  D07C               	goto	l88
   575                           
   576                           ;KeyFn.c: 154: PORTB = 0X02;
   577                           
   578                           ;KeyFn.c: 152: break;
   579  007F06  0E02               	movlw	2
   580  007F08  6E81               	movwf	3969,c	;volatile
   581                           
   582                           ;KeyFn.c: 155: if(Print_key((PORTBbits.RB7)&&(PORTBbits.RB1), arr[2][0]))
   583  007F0A  0E00               	movlw	0
   584  007F0C  6E0E               	movwf	_Get_key$102,c
   585  007F0E  BE81               	btfsc	3969,7,c	;volatile
   586  007F10  A281               	btfss	3969,1,c	;volatile
   587  007F12  D002               	goto	l1504
   588  007F14  0E01               	movlw	1
   589  007F16  6E0E               	movwf	_Get_key$102,c
   590  007F18                     l1504:
   591  007F18  C01F  F004         	movff	_arr+8,Print_key@a
   592  007F1C  500E               	movf	_Get_key$102,w,c
   593  007F1E  ECA6  F03E         	call	_Print_key
   594  007F22  0900               	iorlw	0
   595  007F24  A4D8               	btfss	status,2,c
   596  007F26  D06B               	goto	l88
   597                           
   598                           ;KeyFn.c: 157: else if(Print_key((PORTBbits.RB6)&&(PORTBbits.RB1), arr[2][1]))
   599                           
   600                           ;KeyFn.c: 156: break;
   601  007F28  0E00               	movlw	0
   602  007F2A  6E0F               	movwf	_Get_key$103,c
   603  007F2C  BC81               	btfsc	3969,6,c	;volatile
   604  007F2E  A281               	btfss	3969,1,c	;volatile
   605  007F30  D002               	goto	l1518
   606  007F32  0E01               	movlw	1
   607  007F34  6E0F               	movwf	_Get_key$103,c
   608  007F36                     l1518:
   609  007F36  C020  F004         	movff	_arr+9,Print_key@a
   610  007F3A  500F               	movf	_Get_key$103,w,c
   611  007F3C  ECA6  F03E         	call	_Print_key
   612  007F40  0900               	iorlw	0
   613  007F42  A4D8               	btfss	status,2,c
   614  007F44  D05C               	goto	l88
   615                           
   616                           ;KeyFn.c: 159: else if(Print_key((PORTBbits.RB5)&&(PORTBbits.RB1), arr[2][2]))
   617                           
   618                           ;KeyFn.c: 158: break;
   619  007F46  0E00               	movlw	0
   620  007F48  6E10               	movwf	_Get_key$104,c
   621  007F4A  BA81               	btfsc	3969,5,c	;volatile
   622  007F4C  A281               	btfss	3969,1,c	;volatile
   623  007F4E  D002               	goto	l1532
   624  007F50  0E01               	movlw	1
   625  007F52  6E10               	movwf	_Get_key$104,c
   626  007F54                     l1532:
   627  007F54  C021  F004         	movff	_arr+10,Print_key@a
   628  007F58  5010               	movf	_Get_key$104,w,c
   629  007F5A  ECA6  F03E         	call	_Print_key
   630  007F5E  0900               	iorlw	0
   631  007F60  A4D8               	btfss	status,2,c
   632  007F62  D04D               	goto	l88
   633                           
   634                           ;KeyFn.c: 161: else if(Print_key((PORTBbits.RB4)&&(PORTBbits.RB1), arr[2][3]))
   635                           
   636                           ;KeyFn.c: 160: break;
   637  007F64  0E00               	movlw	0
   638  007F66  6E11               	movwf	_Get_key$105,c
   639  007F68  B881               	btfsc	3969,4,c	;volatile
   640  007F6A  A281               	btfss	3969,1,c	;volatile
   641  007F6C  D002               	goto	l1546
   642  007F6E  0E01               	movlw	1
   643  007F70  6E11               	movwf	_Get_key$105,c
   644  007F72                     l1546:
   645  007F72  C022  F004         	movff	_arr+11,Print_key@a
   646  007F76  5011               	movf	_Get_key$105,w,c
   647  007F78  ECA6  F03E         	call	_Print_key
   648  007F7C  0900               	iorlw	0
   649  007F7E  A4D8               	btfss	status,2,c
   650  007F80  D03E               	goto	l88
   651                           
   652                           ;KeyFn.c: 164: PORTB = 0X01;
   653                           
   654                           ;KeyFn.c: 162: break;
   655  007F82  0E01               	movlw	1
   656  007F84  6E81               	movwf	3969,c	;volatile
   657                           
   658                           ;KeyFn.c: 165: if(Print_key((PORTBbits.RB7)&&(PORTBbits.RB0), arr[3][0]))
   659  007F86  0E00               	movlw	0
   660  007F88  6E12               	movwf	_Get_key$106,c
   661  007F8A  BE81               	btfsc	3969,7,c	;volatile
   662  007F8C  A081               	btfss	3969,0,c	;volatile
   663  007F8E  D002               	goto	l1558
   664  007F90  0E01               	movlw	1
   665  007F92  6E12               	movwf	_Get_key$106,c
   666  007F94                     l1558:
   667  007F94  C023  F004         	movff	_arr+12,Print_key@a
   668  007F98  5012               	movf	_Get_key$106,w,c
   669  007F9A  ECA6  F03E         	call	_Print_key
   670  007F9E  0900               	iorlw	0
   671  007FA0  A4D8               	btfss	status,2,c
   672  007FA2  D02D               	goto	l88
   673                           
   674                           ;KeyFn.c: 167: else if(Print_key((PORTBbits.RB6)&&(PORTBbits.RB0), arr[3][1]))
   675                           
   676                           ;KeyFn.c: 166: break;
   677  007FA4  0E00               	movlw	0
   678  007FA6  6E13               	movwf	_Get_key$107,c
   679  007FA8  BC81               	btfsc	3969,6,c	;volatile
   680  007FAA  A081               	btfss	3969,0,c	;volatile
   681  007FAC  D002               	goto	l1572
   682  007FAE  0E01               	movlw	1
   683  007FB0  6E13               	movwf	_Get_key$107,c
   684  007FB2                     l1572:
   685  007FB2  C024  F004         	movff	_arr+13,Print_key@a
   686  007FB6  5013               	movf	_Get_key$107,w,c
   687  007FB8  ECA6  F03E         	call	_Print_key
   688  007FBC  0900               	iorlw	0
   689  007FBE  A4D8               	btfss	status,2,c
   690  007FC0  D01E               	goto	l88
   691                           
   692                           ;KeyFn.c: 169: else if(Print_key((PORTBbits.RB5)&&(PORTBbits.RB0), arr[3][2]))
   693                           
   694                           ;KeyFn.c: 168: break;
   695  007FC2  0E00               	movlw	0
   696  007FC4  6E14               	movwf	_Get_key$108,c
   697  007FC6  BA81               	btfsc	3969,5,c	;volatile
   698  007FC8  A081               	btfss	3969,0,c	;volatile
   699  007FCA  D002               	goto	l1586
   700  007FCC  0E01               	movlw	1
   701  007FCE  6E14               	movwf	_Get_key$108,c
   702  007FD0                     l1586:
   703  007FD0  C025  F004         	movff	_arr+14,Print_key@a
   704  007FD4  5014               	movf	_Get_key$108,w,c
   705  007FD6  ECA6  F03E         	call	_Print_key
   706  007FDA  0900               	iorlw	0
   707  007FDC  A4D8               	btfss	status,2,c
   708  007FDE  D00F               	goto	l88
   709                           
   710                           ;KeyFn.c: 171: else if(Print_key((PORTBbits.RB4)&&(PORTBbits.RB0), arr[3][3]))
   711                           
   712                           ;KeyFn.c: 170: break;
   713  007FE0  0E00               	movlw	0
   714  007FE2  6E15               	movwf	_Get_key$109,c
   715  007FE4  B881               	btfsc	3969,4,c	;volatile
   716  007FE6  A081               	btfss	3969,0,c	;volatile
   717  007FE8  D002               	goto	l1600
   718  007FEA  0E01               	movlw	1
   719  007FEC  6E15               	movwf	_Get_key$109,c
   720  007FEE                     l1600:
   721  007FEE  C026  F004         	movff	_arr+15,Print_key@a
   722  007FF2  5015               	movf	_Get_key$109,w,c
   723  007FF4  ECA6  F03E         	call	_Print_key
   724  007FF8  0900               	iorlw	0
   725  007FFA  B4D8               	btfsc	status,2,c
   726  007FFC  D708               	goto	l1388
   727  007FFE                     l88:
   728  007FFE  0012               	return	
   729  008000                     __end_of_Get_key:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           status	equ	0xFD8
   739                           
   740 ;; *************** function _Print_key *****************
   741 ;; Defined at:
   742 ;;		line 88 in file "KeyFn.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  element         1    wreg     unsigned char 
   745 ;;  a               1    3[COMRAM] unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  element         1    4[COMRAM] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      unsigned char 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   757 ;;      Params:         1       0       0       0       0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0
   760 ;;      Totals:         2       0       0       0       0       0       0       0       0
   761 ;;Total ram usage:        2 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    2
   764 ;; This function calls:
   765 ;;		_Write
   766 ;;		_delay_ms
   767 ;; This function is called by:
   768 ;;		_Get_key
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text2
   773  007D4C                     __ptext2:
   774                           	opt stack 0
   775  007D4C                     _Print_key:
   776                           	opt stack 27
   777                           
   778                           ;incstack = 0
   779                           ;Print_key@element stored from wreg
   780  007D4C  6E05               	movwf	Print_key@element,c
   781                           
   782                           ;KeyFn.c: 90: if(element)
   783  007D4E  5005               	movf	Print_key@element,w,c
   784  007D50  B4D8               	btfsc	status,2,c
   785  007D52  D011               	goto	l1366
   786                           
   787                           ;KeyFn.c: 91: {
   788                           ;KeyFn.c: 92: delay_ms(10);
   789  007D54  0E0A               	movlw	10
   790  007D56  EC78  F03E         	call	_delay_ms
   791                           
   792                           ;KeyFn.c: 93: if (element)
   793  007D5A  5005               	movf	Print_key@element,w,c
   794  007D5C  B4D8               	btfsc	status,2,c
   795  007D5E  D00B               	goto	l1366
   796                           
   797                           ;KeyFn.c: 94: {
   798                           ;KeyFn.c: 95: delay_ms(10);
   799  007D60  0E0A               	movlw	10
   800  007D62  EC78  F03E         	call	_delay_ms
   801                           
   802                           ;KeyFn.c: 96: if (element)
   803  007D66  5005               	movf	Print_key@element,w,c
   804  007D68  B4D8               	btfsc	status,2,c
   805  007D6A  D005               	goto	l1366
   806                           
   807                           ;KeyFn.c: 97: {
   808                           ;KeyFn.c: 98: Write(a);
   809  007D6C  5004               	movf	Print_key@a,w,c
   810  007D6E  EC6D  F03E         	call	_Write
   811                           
   812                           ;KeyFn.c: 99: return(1);
   813  007D72  0E01               	movlw	1
   814  007D74  D001               	goto	l18
   815  007D76                     l1366:
   816                           
   817                           ;KeyFn.c: 100: }
   818                           ;KeyFn.c: 101: }
   819                           ;KeyFn.c: 102: }
   820                           ;KeyFn.c: 103: return(0);
   821  007D76  0E00               	movlw	0
   822  007D78                     l18:
   823  007D78  0012               	return	
   824  007D7A                     __end_of_Print_key:
   825                           	opt stack 0
   826                           tblptru	equ	0xFF8
   827                           tblptrh	equ	0xFF7
   828                           tblptrl	equ	0xFF6
   829                           tablat	equ	0xFF5
   830                           postinc0	equ	0xFEE
   831                           postdec1	equ	0xFE5
   832                           fsr1l	equ	0xFE1
   833                           status	equ	0xFD8
   834                           
   835 ;; *************** function _delay_ms *****************
   836 ;; Defined at:
   837 ;;		line 17 in file "delay.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  t               1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  t               1    1[COMRAM] unsigned char 
   842 ;;  i               1    2[COMRAM] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;		None               void
   845 ;; Registers used:
   846 ;;		wreg, status,2, status,0, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   852 ;;      Params:         0       0       0       0       0       0       0       0       0
   853 ;;      Locals:         2       0       0       0       0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0
   855 ;;      Totals:         2       0       0       0       0       0       0       0       0
   856 ;;Total ram usage:        2 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    1
   859 ;; This function calls:
   860 ;;		_Delay1KTCYx
   861 ;; This function is called by:
   862 ;;		_Print_key
   863 ;;		_Get_key
   864 ;;		_Delay_s
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text3
   869  007CF0                     __ptext3:
   870                           	opt stack 0
   871  007CF0                     _delay_ms:
   872                           	opt stack 28
   873                           
   874                           ;incstack = 0
   875                           ;delay_ms@t stored from wreg
   876  007CF0  6E02               	movwf	delay_ms@t,c
   877                           
   878                           ;delay.c: 19: unsigned char i;
   879                           ;delay.c: 20: for (i=0;i<=t;i++)
   880  007CF2  0E00               	movlw	0
   881  007CF4  6E03               	movwf	delay_ms@i,c
   882  007CF6  D004               	goto	l1346
   883  007CF8                     l1342:
   884                           
   885                           ;delay.c: 21: Delay1KTCYx(5);
   886  007CF8  0E05               	movlw	5
   887  007CFA  EC53  F03E         	call	_Delay1KTCYx
   888  007CFE  2A03               	incf	delay_ms@i,f,c
   889  007D00                     l1346:
   890  007D00  5003               	movf	delay_ms@i,w,c
   891  007D02  5C02               	subwf	delay_ms@t,w,c
   892  007D04  A0D8               	btfss	status,0,c
   893                           
   894                           ;delay.c: 25: return;
   895  007D06  0012               	return	
   896  007D08  D7F7               	goto	l1342
   897  007D0A                     __end_of_delay_ms:
   898                           	opt stack 0
   899                           tblptru	equ	0xFF8
   900                           tblptrh	equ	0xFF7
   901                           tblptrl	equ	0xFF6
   902                           tablat	equ	0xFF5
   903                           postinc0	equ	0xFEE
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           status	equ	0xFD8
   907                           
   908 ;; *************** function _Delay1KTCYx *****************
   909 ;; Defined at:
   910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  unit            1    wreg     unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  unit            1    0[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;		None               void
   917 ;; Registers used:
   918 ;;		wreg
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         1       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        1 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_delay_ms
   934 ;;		_delay_us
   935 ;;		_DelayPORXLCD
   936 ;;		_DelayXLCD
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text4
   941  007CA6                     __ptext4:
   942                           	opt stack 0
   943  007CA6                     _Delay1KTCYx:
   944                           	opt stack 28
   945                           
   946                           ;incstack = 0
   947                           ;Delay1KTCYx@unit stored from wreg
   948  007CA6  6E01               	movwf	Delay1KTCYx@unit,c
   949  007CA8                     l535:
   950  007CA8  0EFA               	movlw	250
   951  007CAA                     u1587:
   952  007CAA  F000               	nop	
   953  007CAC  2EE8               	decfsz	wreg,f,c
   954  007CAE  D7FD               	goto	u1587
   955  007CB0  2E01               	decfsz	Delay1KTCYx@unit,f,c
   956  007CB2  D7FA               	goto	l535
   957  007CB4  0012               	return	
   958  007CB6                     __end_of_Delay1KTCYx:
   959                           	opt stack 0
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           postdec1	equ	0xFE5
   967                           fsr1l	equ	0xFE1
   968                           status	equ	0xFD8
   969                           
   970 ;; *************** function _Write *****************
   971 ;; Defined at:
   972 ;;		line 42 in file "uart.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  data            1    wreg     unsigned char 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  data            1    2[COMRAM] unsigned char 
   977 ;;  c               1    1[COMRAM] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       0       0       0       0       0       0       0       0
   988 ;;      Locals:         2       0       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         2       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        2 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    1
   994 ;; This function calls:
   995 ;;		_WriteUSART
   996 ;; This function is called by:
   997 ;;		_Print_key
   998 ;;		_Read_string
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text5
  1003  007CDA                     __ptext5:
  1004                           	opt stack 0
  1005  007CDA                     _Write:
  1006                           	opt stack 27
  1007                           
  1008                           ;incstack = 0
  1009                           ;Write@data stored from wreg
  1010  007CDA  6E03               	movwf	Write@data,c
  1011                           
  1012                           ;uart.c: 44: char c;
  1013                           ;uart.c: 45: WriteUSART(data);
  1014  007CDC  5003               	movf	Write@data,w,c
  1015  007CDE  EC64  F03E         	call	_WriteUSART
  1016  007CE2                     l183:
  1017  007CE2  A2AC               	btfss	4012,1,c	;volatile
  1018  007CE4  D7FE               	goto	l183
  1019                           
  1020                           ;uart.c: 47: c = TXREG;
  1021  007CE6  CFAD F002          	movff	4013,Write@c	;volatile
  1022                           
  1023                           ;uart.c: 48: c = TXREG;
  1024  007CEA  CFAD F002          	movff	4013,Write@c	;volatile
  1025  007CEE  0012               	return	
  1026  007CF0                     __end_of_Write:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           postdec1	equ	0xFE5
  1035                           fsr1l	equ	0xFE1
  1036                           status	equ	0xFD8
  1037                           
  1038 ;; *************** function _WriteUSART *****************
  1039 ;; Defined at:
  1040 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  data            1    wreg     unsigned char 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  data            1    0[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;		None               void
  1047 ;; Registers used:
  1048 ;;		wreg
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:        1 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_Write
  1064 ;;		_Read_string
  1065 ;;		_Read_str_
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text6
  1070  007CC8                     __ptext6:
  1071                           	opt stack 0
  1072  007CC8                     _WriteUSART:
  1073                           	opt stack 27
  1074                           
  1075                           ;incstack = 0
  1076                           ;WriteUSART@data stored from wreg
  1077  007CC8  6E01               	movwf	WriteUSART@data,c
  1078  007CCA  ACAC               	btfss	4012,6,c	;volatile
  1079  007CCC  D003               	goto	l1338
  1080  007CCE  90AC               	bcf	4012,0,c	;volatile
  1081  007CD0  B228               	btfsc	_USART_Status,1,c
  1082  007CD2  80AC               	bsf	4012,0,c	;volatile
  1083  007CD4                     l1338:
  1084  007CD4  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  1085  007CD8  0012               	return	
  1086  007CDA                     __end_of_WriteUSART:
  1087                           	opt stack 0
  1088                           tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function _ConfigUSART *****************
  1099 ;; Defined at:
  1100 ;;		line 19 in file "uart.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  config_1        1    wreg     unsigned char 
  1103 ;;  config_2        1    6[COMRAM] unsigned char 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  config_1        1    7[COMRAM] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;		None               void
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1115 ;;      Params:         1       0       0       0       0       0       0       0       0
  1116 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1118 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1119 ;;Total ram usage:        2 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    1
  1122 ;; This function calls:
  1123 ;;		_OpenUSART
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text7
  1130  007C96                     __ptext7:
  1131                           	opt stack 0
  1132  007C96                     _ConfigUSART:
  1133                           	opt stack 29
  1134                           
  1135                           ;incstack = 0
  1136                           ;ConfigUSART@config_1 stored from wreg
  1137  007C96  6E08               	movwf	ConfigUSART@config_1,c
  1138                           
  1139                           ;uart.c: 21: OpenUSART(config_1, config_2);
  1140  007C98  C007  F001         	movff	ConfigUSART@config_2,OpenUSART@spbrg
  1141  007C9C  6A02               	clrf	OpenUSART@spbrg+1,c
  1142  007C9E  5008               	movf	ConfigUSART@config_1,w,c
  1143  007CA0  ECBD  F03E         	call	_OpenUSART
  1144  007CA4  0012               	return	
  1145  007CA6                     __end_of_ConfigUSART:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _OpenUSART *****************
  1158 ;; Defined at:
  1159 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  config          1    wreg     unsigned char 
  1162 ;;  spbrg           2    0[COMRAM] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  config          1    5[COMRAM] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;		None               void
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         2       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        6 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_ConfigUSART
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text8
  1188  007D7A                     __ptext8:
  1189                           	opt stack 0
  1190  007D7A                     _OpenUSART:
  1191                           	opt stack 29
  1192                           
  1193                           ;incstack = 0
  1194                           ;OpenUSART@config stored from wreg
  1195  007D7A  6E06               	movwf	OpenUSART@config,c
  1196  007D7C  0E00               	movlw	0
  1197  007D7E  6EAC               	movwf	4012,c	;volatile
  1198  007D80  0E00               	movlw	0
  1199  007D82  6EAB               	movwf	4011,c	;volatile
  1200  007D84  B006               	btfsc	OpenUSART@config,0,c
  1201  007D86  88AC               	bsf	4012,4,c	;volatile
  1202  007D88  A206               	btfss	OpenUSART@config,1,c
  1203  007D8A  D002               	goto	l946
  1204  007D8C  8CAC               	bsf	4012,6,c	;volatile
  1205  007D8E  8CAB               	bsf	4011,6,c	;volatile
  1206  007D90                     l946:
  1207  007D90  B406               	btfsc	OpenUSART@config,2,c
  1208  007D92  8EAC               	bsf	4012,7,c	;volatile
  1209  007D94  A606               	btfss	OpenUSART@config,3,c
  1210  007D96  D002               	goto	l250
  1211  007D98  88AB               	bsf	4011,4,c	;volatile
  1212  007D9A  D001               	goto	l954
  1213  007D9C                     l250:
  1214  007D9C  8AAB               	bsf	4011,5,c	;volatile
  1215  007D9E                     l954:
  1216  007D9E  B806               	btfsc	OpenUSART@config,4,c
  1217  007DA0  84AC               	bsf	4012,2,c	;volatile
  1218  007DA2  989E               	bcf	3998,4,c	;volatile
  1219  007DA4  BA06               	btfsc	OpenUSART@config,5,c
  1220  007DA6  86AB               	bsf	4011,3,c	;volatile
  1221  007DA8  AC06               	btfss	OpenUSART@config,6,c
  1222  007DAA  D002               	goto	l254
  1223  007DAC  8A9D               	bsf	3997,5,c	;volatile
  1224  007DAE  D001               	goto	l255
  1225  007DB0                     l254:
  1226  007DB0  9A9D               	bcf	3997,5,c	;volatile
  1227  007DB2                     l255:
  1228  007DB2  9A9E               	bcf	3998,5,c	;volatile
  1229  007DB4  AE06               	btfss	OpenUSART@config,7,c
  1230  007DB6  D002               	goto	l256
  1231  007DB8  889D               	bsf	3997,4,c	;volatile
  1232  007DBA  D001               	goto	l257
  1233  007DBC                     l256:
  1234  007DBC  989D               	bcf	3997,4,c	;volatile
  1235  007DBE                     l257:
  1236  007DBE  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1237  007DC2  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1238  007DC6  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  1239  007DCA  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  1240  007DCC  5004               	movf	??_OpenUSART+1,w,c
  1241  007DCE  6EB0               	movwf	4016,c	;volatile
  1242  007DD0  8AAC               	bsf	4012,5,c	;volatile
  1243  007DD2  8EAB               	bsf	4011,7,c	;volatile
  1244  007DD4  9C94               	bcf	3988,6,c	;volatile
  1245  007DD6  8E94               	bsf	3988,7,c	;volatile
  1246  007DD8  B8AC               	btfsc	4012,4,c	;volatile
  1247  007DDA  BEAC               	btfsc	4012,7,c	;volatile
  1248  007DDC  D001               	goto	l259
  1249  007DDE  8C94               	bsf	3988,6,c	;volatile
  1250  007DE0                     l259:
  1251  007DE0  0012               	return	
  1252  007DE2                     __end_of_OpenUSART:
  1253                           	opt stack 0
  1254  0000                     tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1l	equ	0xFE1
  1262                           status	equ	0xFD8
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           postdec1	equ	0xFE5
  1270                           fsr1l	equ	0xFE1
  1271                           status	equ	0xFD8
  1272                           
  1273                           	psect	rparam
  1274  0000                     tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Get_key
    _Get_key->_Print_key
    _Print_key->_Write
    _Print_key->_delay_ms
    _delay_ms->_Delay1KTCYx
    _Write->_WriteUSART
    _ConfigUSART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1638
                        _ConfigUSART
                            _Get_key
 ---------------------------------------------------------------------------------
 (1) _Get_key                                             17    17      0    1390
                                              5 COMRAM    17    17      0
                          _Print_key
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Print_key                                            2     1      1     890
                                              3 COMRAM     2     1      1
                              _Write
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Write                                                2     2      0      46
                                              1 COMRAM     2     2      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (4) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          2     1      1     248
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     184
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigUSART
     _OpenUSART
   _Get_key
     _Print_key
       _Write
         _WriteUSART
       _delay_ms
         _Delay1KTCYx
     _delay_ms
       _Delay1KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      28       1       42.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      20        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 22 15:30:10 2014

                     l21 7DE6                       l18 7D78                       l88 7FFE  
            __CFG_BORV$3 000000                      l250 7D9C                      l254 7DB0  
                    l255 7DB2                      l183 7CE2                      l256 7DBC  
                    l257 7DBE                      l259 7DE0                      l535 7CA8  
                    l954 7D9E                      l946 7D90             __CFG_BOR$OFF 000000  
                    _arr 0017                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1410 7E3E  
                   l1342 7CF8                     l1600 7FEE                     l1504 7F18  
                   l1424 7E5C                     l1338 7CD4                     l1346 7D00  
                   l1450 7E9C                     l1532 7F54                     l1380 7DFC  
                   l1366 7D76                     l1518 7F36                     l1438 7E7A  
                   l1464 7EBA                     l1546 7F72                     l1572 7FB2  
                   l1492 7EF6                     l1396 7E20                     l1388 7E0E  
                   l1558 7F94                     l1478 7ED8                     l1586 7FD0  
                   u1587 7CAA                     _main 7D0A                     fsr1l 000FE1  
                   start 0000            __CFG_IESO$OFF 000000      __end_of_ConfigUSART 7CA6  
          __CFG_MCLRE$ON 000000          __end_of_Get_key 8000              _Delay1KTCYx 7CA6  
          __CFG_PLLDIV$5 000000                    ?_main 0001               _Get_key$94 0006  
             _Get_key$95 0007               _Get_key$96 0008               _Get_key$97 0009  
             _Get_key$98 000A               _Get_key$99 000B                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _PORTB 000F81  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISD 000F95  
                  _TXREG 000FAD                    _TXSTA 000FAC            __CFG_PWRT$OFF 000000  
         __CFG_FCMEN$OFF 000000                    _Write 7CDA                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           WriteUSART@data 0001  
        __initialization 7D24             __end_of_main 7D24                   ??_main 0017  
          __activetblptr 000000          __CFG_CCP2MX$OFF 000000                   ?_Write 0001  
            _Get_key$100 000C              _Get_key$101 000D              _Get_key$102 000E  
            _Get_key$103 000F              _Get_key$104 0010              _Get_key$105 0011  
            _Get_key$106 0012              _Get_key$107 0013              _Get_key$108 0014  
            _Get_key$109 0015              _ConfigUSART 7C96                   _SPBRGH 000FB0  
              ??_Get_key 0006         __end_of_delay_ms 7D0A           __CFG_XINST$OFF 000000  
     __size_of_OpenUSART 0068           __CFG_STVREN$ON 000000                   Write@c 0002  
             Print_key@a 0004             __pdataCOMRAM 0017       __size_of_Print_key 002E  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7D46          __CFG_PBADEN$OFF 000000  
             _WriteUSART 7CC8           __pcstackCOMRAM 0001            __end_of_Write 7CF0  
                ??_Write 0002        __end_of_OpenUSART 7DE2        __end_of_Print_key 7D7A  
           ?_Delay1KTCYx 0001         Print_key@element 0005                ?_delay_ms 0001  
        __CFG_VREGEN$OFF 000000                  _Get_key 7DE2                  __Hparam 0000  
                __Lparam 0000              ?_WriteUSART 0001                  __pcinit 7D24  
                __ramtop 0800                  __ptext0 7D0A                  __ptext1 7DE2  
                __ptext2 7D4C                  __ptext3 7CF0                  __ptext4 7CA6  
                __ptext5 7CDA                  __ptext6 7CC8                  __ptext7 7C96  
                __ptext8 7D7A               ??_delay_ms 0002     end_of_initialization 7D46  
           ?_ConfigUSART 0007      ConfigUSART@config_1 0008      ConfigUSART@config_2 0007  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _PORTBbits 000F81                _TRISCbits 000F94      __size_of_WriteUSART 0012  
              _TXSTAbits 000FAC            __pidataCOMRAM 7CB7     __size_of_Delay1KTCYx 0010  
    start_initialization 7D24                _OpenUSART 7D7A                _Print_key 7D4C  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0028        __size_of_delay_ms 001A  
        Delay1KTCYx@unit 0001               ?_OpenUSART 0001                 ?_Get_key 0001  
   __size_of_ConfigUSART 0010                Write@data 0003             ??_WriteUSART 0001  
             ?_Print_key 0004           __size_of_Write 0016       __end_of_WriteUSART 7CDA  
              delay_ms@i 0003                delay_ms@t 0002                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                copy_data0 7D3A  
            ??_OpenUSART 0003          OpenUSART@config 0006         __size_of_Get_key 021E  
               __Hrparam 0000                 __Lrparam 0000              ??_Print_key 0005  
               _delay_ms 7CF0                 _config_1 0027            __size_of_main 001A  
          ??_Delay1KTCYx 0001    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
    __end_of_Delay1KTCYx 7CB6               Get_key@row 0016            ??_ConfigUSART 0008  
           _USART_Status 0028  
