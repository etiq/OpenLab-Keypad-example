

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Sep 22 15:33:11 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  007CA9                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _arr
    28  007CA9  31                 	db	49
    29  007CAA  32                 	db	50
    30  007CAB  33                 	db	51
    31  007CAC  41                 	db	65
    32  007CAD  34                 	db	52
    33  007CAE  35                 	db	53
    34  007CAF  36                 	db	54
    35  007CB0  42                 	db	66
    36  007CB1  37                 	db	55
    37  007CB2  38                 	db	56
    38  007CB3  39                 	db	57
    39  007CB4  43                 	db	67
    40  007CB5  2A                 	db	42
    41  007CB6  30                 	db	48
    42  007CB7  23                 	db	35
    43  007CB8  44                 	db	68
    44                           
    45                           ;initializer for _config_1
    46  007CB9  2C                 	db	44
    47  0000                     _PIE1bits	set	3997
    48  0000                     _PIR1bits	set	3998
    49  0000                     _PORTB	set	3969
    50  0000                     _PORTBbits	set	3969
    51  0000                     _RCREG	set	4014
    52  0000                     _RCSTA	set	4011
    53  0000                     _RCSTAbits	set	4011
    54  0000                     _SPBRG	set	4015
    55  0000                     _SPBRGH	set	4016
    56  0000                     _TRISB	set	3987
    57  0000                     _TRISCbits	set	3988
    58  0000                     _TRISD	set	3989
    59  0000                     _TXREG	set	4013
    60  0000                     _TXSTA	set	4012
    61  0000                     _TXSTAbits	set	4012
    62  0000                     _RBPU	set	32655
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  007D1C                     __pcinit:
    68                           	opt stack 0
    69  007D1C                     start_initialization:
    70                           	opt stack 0
    71  007D1C                     __initialization:
    72                           	opt stack 0
    73                           
    74                           ; Clear objects allocated to COMRAM (1 bytes)
    75  007D1C  6A28               	clrf	__pbssCOMRAM& (0+255),c
    76                           
    77                           ; Initialize objects allocated to COMRAM (17 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79  007D1E  0EA9               	movlw	low __pidataCOMRAM
    80  007D20  6EF6               	movwf	tblptrl,c
    81  007D22  0E7C               	movlw	high __pidataCOMRAM
    82  007D24  6EF7               	movwf	tblptrh,c
    83  007D26  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84  007D28  6EF8               	movwf	tblptru,c
    85  007D2A  EE00  F017         	lfsr	0,__pdataCOMRAM
    86  007D2E  EE10 F011          	lfsr	1,17
    87  007D32                     copy_data0:
    88  007D32  0009               	tblrd		*+
    89  007D34  CFF5 FFEE          	movff	tablat,postinc0
    90  007D38  50E5               	movf	postdec1,w,c
    91  007D3A  50E1               	movf	fsr1l,w,c
    92  007D3C  E1FA               	bnz	copy_data0
    93  007D3E                     end_of_initialization:
    94                           	opt stack 0
    95  007D3E                     __end_of__initialization:
    96                           	opt stack 0
    97  007D3E  0100               	movlb	0
    98  007D40  EF80  F03E         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           tblptrh	equ	0xFF7
   101                           tblptrl	equ	0xFF6
   102                           tablat	equ	0xFF5
   103                           postinc0	equ	0xFEE
   104                           postdec1	equ	0xFE5
   105                           fsr1l	equ	0xFE1
   106                           
   107                           	psect	bssCOMRAM
   108  000028                     __pbssCOMRAM:
   109                           	opt stack 0
   110  000028                     _USART_Status:
   111                           	opt stack 0
   112  000028                     	ds	1
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           postinc0	equ	0xFEE
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	dataCOMRAM
   122  000017                     __pdataCOMRAM:
   123                           	opt stack 0
   124  000017                     _arr:
   125                           	opt stack 0
   126  000017                     	ds	16
   127  000027                     _config_1:
   128                           	opt stack 0
   129  000027                     	ds	1
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	cstackCOMRAM
   139  000001                     __pcstackCOMRAM:
   140                           	opt stack 0
   141  000001                     WriteUSART@data:
   142                           	opt stack 0
   143  000001                     Delay1KTCYx@unit:
   144                           	opt stack 0
   145  000001                     OpenUSART@spbrg:
   146                           	opt stack 0
   147                           
   148                           ; 2 bytes @ 0x0
   149  000001                     	ds	1
   150  000002                     delay_ms@t:
   151                           	opt stack 0
   152  000002                     delay_us@t:
   153                           	opt stack 0
   154  000002                     Write@data:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x1
   158  000002                     	ds	1
   159  000003                     ??_OpenUSART:
   160  000003                     delay_ms@i:
   161                           	opt stack 0
   162  000003                     delay_us@i:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x2
   166  000003                     	ds	1
   167  000004                     Print_key@a:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x3
   171  000004                     	ds	1
   172  000005                     Print_key@element:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x4
   176  000005                     	ds	1
   177  000006                     _GetKey$122:
   178                           	opt stack 0
   179  000006                     OpenUSART@config:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x5
   183  000006                     	ds	1
   184  000007                     _GetKey$123:
   185                           	opt stack 0
   186  000007                     ConfigUSART@config_2:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x6
   190  000007                     	ds	1
   191  000008                     _GetKey$124:
   192                           	opt stack 0
   193  000008                     ConfigUSART@config_1:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x7
   197  000008                     	ds	1
   198  000009                     _GetKey$125:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x8
   202  000009                     	ds	1
   203  00000A                     _GetKey$126:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x9
   207  00000A                     	ds	1
   208  00000B                     _GetKey$127:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0xA
   212  00000B                     	ds	1
   213  00000C                     _GetKey$128:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0xB
   217  00000C                     	ds	1
   218  00000D                     _GetKey$129:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0xC
   222  00000D                     	ds	1
   223  00000E                     _GetKey$130:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xD
   227  00000E                     	ds	1
   228  00000F                     _GetKey$131:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xE
   232  00000F                     	ds	1
   233  000010                     _GetKey$132:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0xF
   237  000010                     	ds	1
   238  000011                     _GetKey$133:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x10
   242  000011                     	ds	1
   243  000012                     _GetKey$134:
   244                           	opt stack 0
   245                           
   246                           ; 1 bytes @ 0x11
   247  000012                     	ds	1
   248  000013                     _GetKey$135:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x12
   252  000013                     	ds	1
   253  000014                     _GetKey$136:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x13
   257  000014                     	ds	1
   258  000015                     _GetKey$137:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x14
   262  000015                     	ds	1
   263  000016                     GetKey@row:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x15
   267  000016                     	ds	1
   268  000017                     tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           
   276                           ; 0 bytes @ 0x16
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 49 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;		None
   287 ;; Return value:  Size  Location     Type
   288 ;;		None               void
   289 ;; Registers used:
   290 ;;		wreg, status,2, status,0, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : 0/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   296 ;;      Params:         0       0       0       0       0       0       0       0       0
   297 ;;      Locals:         0       0       0       0       0       0       0       0       0
   298 ;;      Temps:          0       0       0       0       0       0       0       0       0
   299 ;;      Totals:         0       0       0       0       0       0       0       0       0
   300 ;;Total ram usage:        0 bytes
   301 ;; Hardware stack levels required when called:    4
   302 ;; This function calls:
   303 ;;		_ConfigUSART
   304 ;;		_GetKey
   305 ;;		_delay_us
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text0
   312  007D00                     __ptext0:
   313                           	opt stack 0
   314  007D00                     _main:
   315                           	opt stack 27
   316                           
   317                           ;main.c: 51: TRISD = 0XF0;
   318                           
   319                           ;incstack = 0
   320  007D00  0EF0               	movlw	240
   321  007D02  6E95               	movwf	3989,c	;volatile
   322                           
   323                           ;main.c: 53: RBPU = 1;
   324  007D04  8EF1               	bsf	intcon2,7,c	;volatile
   325                           
   326                           ;main.c: 54: ConfigUSART(config_1, ((20000000/9600/64)-1));
   327  007D06  0E1F               	movlw	31
   328  007D08  6E07               	movwf	ConfigUSART@config_2,c
   329  007D0A  5027               	movf	_config_1,w,c
   330  007D0C  EC44  F03E         	call	_ConfigUSART
   331  007D10                     l1659:
   332                           
   333                           ;main.c: 56: {
   334                           ;main.c: 57: GetKey();
   335  007D10  ECED  F03E         	call	_GetKey	;wreg free
   336                           
   337                           ;main.c: 58: delay_us(1);
   338  007D14  0E01               	movlw	1
   339  007D16  EC73  F03E         	call	_delay_us
   340  007D1A  D7FA               	goto	l1659
   341  007D1C                     __end_of_main:
   342                           	opt stack 0
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           intcon2	equ	0xFF1
   348                           postinc0	equ	0xFEE
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352 ;; *************** function _delay_us *****************
   353 ;; Defined at:
   354 ;;		line 27 in file "delay.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  t               1    wreg     unsigned char 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  t               1    1[COMRAM] unsigned char 
   359 ;;  i               1    2[COMRAM] unsigned char 
   360 ;; Return value:  Size  Location     Type
   361 ;;		None               void
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         2       0       0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0
   372 ;;      Totals:         2       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        2 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		_Delay1KTCYx
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text1
   384  007CE6                     __ptext1:
   385                           	opt stack 0
   386  007CE6                     _delay_us:
   387                           	opt stack 29
   388                           
   389                           ;incstack = 0
   390                           ;delay_us@t stored from wreg
   391  007CE6  6E02               	movwf	delay_us@t,c
   392                           
   393                           ;delay.c: 29: unsigned char i;
   394                           ;delay.c: 30: for (i=0;i<=t;i++)
   395  007CE8  0E00               	movlw	0
   396  007CEA  6E03               	movwf	delay_us@i,c
   397  007CEC  D004               	goto	l1383
   398  007CEE                     l1379:
   399                           
   400                           ;delay.c: 31: Delay1KTCYx(1);
   401  007CEE  0E01               	movlw	1
   402  007CF0  EC4C  F03E         	call	_Delay1KTCYx
   403  007CF4  2A03               	incf	delay_us@i,f,c
   404  007CF6                     l1383:
   405  007CF6  5003               	movf	delay_us@i,w,c
   406  007CF8  5C02               	subwf	delay_us@t,w,c
   407  007CFA  A0D8               	btfss	status,0,c
   408                           
   409                           ;delay.c: 34: return;
   410  007CFC  0012               	return	
   411  007CFE  D7F7               	goto	l1379
   412  007D00                     __end_of_delay_us:
   413                           	opt stack 0
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           intcon2	equ	0xFF1
   419                           postinc0	equ	0xFEE
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           status	equ	0xFD8
   423                           
   424 ;; *************** function _GetKey *****************
   425 ;; Defined at:
   426 ;;		line 107 in file "keyFn.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  row             1   21[COMRAM] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;		None               void
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:        17       0       0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0
   443 ;;      Totals:        17       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:       17 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		_Print_key
   449 ;;		_delay_ms
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           	psect	text2
   456  007DDA                     __ptext2:
   457                           	opt stack 0
   458  007DDA                     _GetKey:
   459                           	opt stack 27
   460                           
   461                           ;keyFn.c: 109: unsigned char row;
   462                           ;keyFn.c: 110: TRISB = 0xF0;
   463                           
   464                           ;incstack = 0
   465  007DDA  0EF0               	movlw	240
   466  007DDC  6E93               	movwf	3987,c	;volatile
   467  007DDE                     l63:
   468                           
   469                           ;keyFn.c: 112: {
   470                           ;keyFn.c: 113: PORTB = 0XF0;
   471  007DDE  0EF0               	movlw	240
   472  007DE0  6E81               	movwf	3969,c	;volatile
   473                           
   474                           ;keyFn.c: 114: row = PORTB;
   475  007DE2  CF81 F016          	movff	3969,GetKey@row	;volatile
   476                           
   477                           ;keyFn.c: 115: row &= 0xF0;
   478  007DE6  0EF0               	movlw	240
   479  007DE8  1616               	andwf	GetKey@row,f,c
   480                           
   481                           ;keyFn.c: 116: }while(row!=0xF0);
   482  007DEA  5016               	movf	GetKey@row,w,c
   483  007DEC  0AF0               	xorlw	240
   484  007DEE  A4D8               	btfss	status,2,c
   485  007DF0  D7F6               	goto	l63
   486                           
   487                           ;keyFn.c: 119: delay_ms(100);
   488  007DF2  0E64               	movlw	100
   489  007DF4  EC66  F03E         	call	_delay_ms
   490  007DF8                     l1395:
   491                           
   492                           ;keyFn.c: 126: {
   493                           ;keyFn.c: 127: PORTB = 0xF0;
   494  007DF8  0EF0               	movlw	240
   495  007DFA  6E81               	movwf	3969,c	;volatile
   496                           
   497                           ;keyFn.c: 128: row = PORTB & 0xF0;
   498  007DFC  5081               	movf	3969,w,c	;volatile
   499  007DFE  0BF0               	andlw	240
   500  007E00  6E16               	movwf	GetKey@row,c
   501                           
   502                           ;keyFn.c: 129: row &= 0xF0;
   503  007E02  0EF0               	movlw	240
   504  007E04  1616               	andwf	GetKey@row,f,c
   505                           
   506                           ;keyFn.c: 130: }while(row==0xF0);
   507  007E06  5016               	movf	GetKey@row,w,c
   508  007E08  0AF0               	xorlw	240
   509  007E0A  B4D8               	btfsc	status,2,c
   510  007E0C  D7F5               	goto	l1395
   511  007E0E                     l1403:
   512                           
   513                           ;keyFn.c: 134: {
   514                           ;keyFn.c: 135: PORTB = 0X07;
   515  007E0E  0E07               	movlw	7
   516  007E10  6E81               	movwf	3969,c	;volatile
   517                           
   518                           ;keyFn.c: 137: if(Print_key((!PORTBbits.RB7)&&(!PORTBbits.RB3),arr[0][0]))
   519  007E12  0E00               	movlw	0
   520  007E14  6E06               	movwf	_GetKey$122,c
   521  007E16  AE81               	btfss	3969,7,c	;volatile
   522  007E18  B681               	btfsc	3969,3,c	;volatile
   523  007E1A  D002               	goto	l1411
   524  007E1C  0E01               	movlw	1
   525  007E1E  6E06               	movwf	_GetKey$122,c
   526  007E20                     l1411:
   527  007E20  C017  F004         	movff	_arr,Print_key@a
   528  007E24  5006               	movf	_GetKey$122,w,c
   529  007E26  ECA2  F03E         	call	_Print_key
   530  007E2A  0900               	iorlw	0
   531  007E2C  A4D8               	btfss	status,2,c
   532  007E2E  D0E7               	goto	l130
   533                           
   534                           ;keyFn.c: 139: else if(Print_key((!PORTBbits.RB6)&&(!PORTBbits.RB3), arr[0][1]))
   535                           
   536                           ;keyFn.c: 138: break;
   537  007E30  0E00               	movlw	0
   538  007E32  6E07               	movwf	_GetKey$123,c
   539  007E34  AC81               	btfss	3969,6,c	;volatile
   540  007E36  B681               	btfsc	3969,3,c	;volatile
   541  007E38  D002               	goto	l1425
   542  007E3A  0E01               	movlw	1
   543  007E3C  6E07               	movwf	_GetKey$123,c
   544  007E3E                     l1425:
   545  007E3E  C018  F004         	movff	_arr+1,Print_key@a
   546  007E42  5007               	movf	_GetKey$123,w,c
   547  007E44  ECA2  F03E         	call	_Print_key
   548  007E48  0900               	iorlw	0
   549  007E4A  A4D8               	btfss	status,2,c
   550  007E4C  D0D8               	goto	l130
   551                           
   552                           ;keyFn.c: 141: else if(Print_key((!PORTBbits.RB5)&&(!PORTBbits.RB3), arr[0][2]))
   553                           
   554                           ;keyFn.c: 140: break;
   555  007E4E  0E00               	movlw	0
   556  007E50  6E08               	movwf	_GetKey$124,c
   557  007E52  AA81               	btfss	3969,5,c	;volatile
   558  007E54  B681               	btfsc	3969,3,c	;volatile
   559  007E56  D002               	goto	l1439
   560  007E58  0E01               	movlw	1
   561  007E5A  6E08               	movwf	_GetKey$124,c
   562  007E5C                     l1439:
   563  007E5C  C019  F004         	movff	_arr+2,Print_key@a
   564  007E60  5008               	movf	_GetKey$124,w,c
   565  007E62  ECA2  F03E         	call	_Print_key
   566  007E66  0900               	iorlw	0
   567  007E68  A4D8               	btfss	status,2,c
   568  007E6A  D0C9               	goto	l130
   569                           
   570                           ;keyFn.c: 143: else if(Print_key((!PORTBbits.RB4)&&(!PORTBbits.RB3), arr[0][3]))
   571                           
   572                           ;keyFn.c: 142: break;
   573  007E6C  0E00               	movlw	0
   574  007E6E  6E09               	movwf	_GetKey$125,c
   575  007E70  A881               	btfss	3969,4,c	;volatile
   576  007E72  B681               	btfsc	3969,3,c	;volatile
   577  007E74  D002               	goto	l1453
   578  007E76  0E01               	movlw	1
   579  007E78  6E09               	movwf	_GetKey$125,c
   580  007E7A                     l1453:
   581  007E7A  C01A  F004         	movff	_arr+3,Print_key@a
   582  007E7E  5009               	movf	_GetKey$125,w,c
   583  007E80  ECA2  F03E         	call	_Print_key
   584  007E84  0900               	iorlw	0
   585  007E86  A4D8               	btfss	status,2,c
   586  007E88  D0BA               	goto	l130
   587                           
   588                           ;keyFn.c: 146: PORTB = 0X0B;
   589                           
   590                           ;keyFn.c: 144: break;
   591  007E8A  0E0B               	movlw	11
   592  007E8C  6E81               	movwf	3969,c	;volatile
   593                           
   594                           ;keyFn.c: 148: if(Print_key((!PORTBbits.RB7)&&(!PORTBbits.RB2), arr[1][0]))
   595  007E8E  0E00               	movlw	0
   596  007E90  6E0A               	movwf	_GetKey$126,c
   597  007E92  AE81               	btfss	3969,7,c	;volatile
   598  007E94  B481               	btfsc	3969,2,c	;volatile
   599  007E96  D002               	goto	l1465
   600  007E98  0E01               	movlw	1
   601  007E9A  6E0A               	movwf	_GetKey$126,c
   602  007E9C                     l1465:
   603  007E9C  C01B  F004         	movff	_arr+4,Print_key@a
   604  007EA0  500A               	movf	_GetKey$126,w,c
   605  007EA2  ECA2  F03E         	call	_Print_key
   606  007EA6  0900               	iorlw	0
   607  007EA8  A4D8               	btfss	status,2,c
   608  007EAA  D0A9               	goto	l130
   609                           
   610                           ;keyFn.c: 150: else if(Print_key((!PORTBbits.RB6)&&(!PORTBbits.RB2), arr[1][1]))
   611                           
   612                           ;keyFn.c: 149: break;
   613  007EAC  0E00               	movlw	0
   614  007EAE  6E0B               	movwf	_GetKey$127,c
   615  007EB0  AC81               	btfss	3969,6,c	;volatile
   616  007EB2  B481               	btfsc	3969,2,c	;volatile
   617  007EB4  D002               	goto	l1479
   618  007EB6  0E01               	movlw	1
   619  007EB8  6E0B               	movwf	_GetKey$127,c
   620  007EBA                     l1479:
   621  007EBA  C01C  F004         	movff	_arr+5,Print_key@a
   622  007EBE  500B               	movf	_GetKey$127,w,c
   623  007EC0  ECA2  F03E         	call	_Print_key
   624  007EC4  0900               	iorlw	0
   625  007EC6  A4D8               	btfss	status,2,c
   626  007EC8  D09A               	goto	l130
   627                           
   628                           ;keyFn.c: 152: else if(Print_key((!PORTBbits.RB5)&&(!PORTBbits.RB2), arr[1][2]))
   629                           
   630                           ;keyFn.c: 151: break;
   631  007ECA  0E00               	movlw	0
   632  007ECC  6E0C               	movwf	_GetKey$128,c
   633  007ECE  AA81               	btfss	3969,5,c	;volatile
   634  007ED0  B481               	btfsc	3969,2,c	;volatile
   635  007ED2  D002               	goto	l1493
   636  007ED4  0E01               	movlw	1
   637  007ED6  6E0C               	movwf	_GetKey$128,c
   638  007ED8                     l1493:
   639  007ED8  C01D  F004         	movff	_arr+6,Print_key@a
   640  007EDC  500C               	movf	_GetKey$128,w,c
   641  007EDE  ECA2  F03E         	call	_Print_key
   642  007EE2  0900               	iorlw	0
   643  007EE4  A4D8               	btfss	status,2,c
   644  007EE6  D08B               	goto	l130
   645                           
   646                           ;keyFn.c: 154: else if(Print_key((!PORTBbits.RB4)&&(!PORTBbits.RB2), arr[1][3]))
   647                           
   648                           ;keyFn.c: 153: break;
   649  007EE8  0E00               	movlw	0
   650  007EEA  6E0D               	movwf	_GetKey$129,c
   651  007EEC  A881               	btfss	3969,4,c	;volatile
   652  007EEE  B481               	btfsc	3969,2,c	;volatile
   653  007EF0  D002               	goto	l1507
   654  007EF2  0E01               	movlw	1
   655  007EF4  6E0D               	movwf	_GetKey$129,c
   656  007EF6                     l1507:
   657  007EF6  C01E  F004         	movff	_arr+7,Print_key@a
   658  007EFA  500D               	movf	_GetKey$129,w,c
   659  007EFC  ECA2  F03E         	call	_Print_key
   660  007F00  0900               	iorlw	0
   661  007F02  A4D8               	btfss	status,2,c
   662  007F04  D07C               	goto	l130
   663                           
   664                           ;keyFn.c: 157: PORTB = 0X0D;
   665                           
   666                           ;keyFn.c: 155: break;
   667  007F06  0E0D               	movlw	13
   668  007F08  6E81               	movwf	3969,c	;volatile
   669                           
   670                           ;keyFn.c: 159: if(Print_key((!PORTBbits.RB7)&&(!PORTBbits.RB1), arr[2][0]))
   671  007F0A  0E00               	movlw	0
   672  007F0C  6E0E               	movwf	_GetKey$130,c
   673  007F0E  AE81               	btfss	3969,7,c	;volatile
   674  007F10  B281               	btfsc	3969,1,c	;volatile
   675  007F12  D002               	goto	l1519
   676  007F14  0E01               	movlw	1
   677  007F16  6E0E               	movwf	_GetKey$130,c
   678  007F18                     l1519:
   679  007F18  C01F  F004         	movff	_arr+8,Print_key@a
   680  007F1C  500E               	movf	_GetKey$130,w,c
   681  007F1E  ECA2  F03E         	call	_Print_key
   682  007F22  0900               	iorlw	0
   683  007F24  A4D8               	btfss	status,2,c
   684  007F26  D06B               	goto	l130
   685                           
   686                           ;keyFn.c: 161: else if(Print_key((!PORTBbits.RB6)&&(!PORTBbits.RB1), arr[2][1]))
   687                           
   688                           ;keyFn.c: 160: break;
   689  007F28  0E00               	movlw	0
   690  007F2A  6E0F               	movwf	_GetKey$131,c
   691  007F2C  AC81               	btfss	3969,6,c	;volatile
   692  007F2E  B281               	btfsc	3969,1,c	;volatile
   693  007F30  D002               	goto	l1533
   694  007F32  0E01               	movlw	1
   695  007F34  6E0F               	movwf	_GetKey$131,c
   696  007F36                     l1533:
   697  007F36  C020  F004         	movff	_arr+9,Print_key@a
   698  007F3A  500F               	movf	_GetKey$131,w,c
   699  007F3C  ECA2  F03E         	call	_Print_key
   700  007F40  0900               	iorlw	0
   701  007F42  A4D8               	btfss	status,2,c
   702  007F44  D05C               	goto	l130
   703                           
   704                           ;keyFn.c: 163: else if(Print_key((!PORTBbits.RB5)&&(!PORTBbits.RB1), arr[2][2]))
   705                           
   706                           ;keyFn.c: 162: break;
   707  007F46  0E00               	movlw	0
   708  007F48  6E10               	movwf	_GetKey$132,c
   709  007F4A  AA81               	btfss	3969,5,c	;volatile
   710  007F4C  B281               	btfsc	3969,1,c	;volatile
   711  007F4E  D002               	goto	l1547
   712  007F50  0E01               	movlw	1
   713  007F52  6E10               	movwf	_GetKey$132,c
   714  007F54                     l1547:
   715  007F54  C021  F004         	movff	_arr+10,Print_key@a
   716  007F58  5010               	movf	_GetKey$132,w,c
   717  007F5A  ECA2  F03E         	call	_Print_key
   718  007F5E  0900               	iorlw	0
   719  007F60  A4D8               	btfss	status,2,c
   720  007F62  D04D               	goto	l130
   721                           
   722                           ;keyFn.c: 165: else if(Print_key((!PORTBbits.RB4)&&(!PORTBbits.RB1), arr[2][3]))
   723                           
   724                           ;keyFn.c: 164: break;
   725  007F64  0E00               	movlw	0
   726  007F66  6E11               	movwf	_GetKey$133,c
   727  007F68  A881               	btfss	3969,4,c	;volatile
   728  007F6A  B281               	btfsc	3969,1,c	;volatile
   729  007F6C  D002               	goto	l1561
   730  007F6E  0E01               	movlw	1
   731  007F70  6E11               	movwf	_GetKey$133,c
   732  007F72                     l1561:
   733  007F72  C022  F004         	movff	_arr+11,Print_key@a
   734  007F76  5011               	movf	_GetKey$133,w,c
   735  007F78  ECA2  F03E         	call	_Print_key
   736  007F7C  0900               	iorlw	0
   737  007F7E  A4D8               	btfss	status,2,c
   738  007F80  D03E               	goto	l130
   739                           
   740                           ;keyFn.c: 167: PORTB = 0X0E;
   741                           
   742                           ;keyFn.c: 166: break;
   743  007F82  0E0E               	movlw	14
   744  007F84  6E81               	movwf	3969,c	;volatile
   745                           
   746                           ;keyFn.c: 169: if(Print_key((!PORTBbits.RB7)&&(!PORTBbits.RB0), arr[3][0]))
   747  007F86  0E00               	movlw	0
   748  007F88  6E12               	movwf	_GetKey$134,c
   749  007F8A  AE81               	btfss	3969,7,c	;volatile
   750  007F8C  B081               	btfsc	3969,0,c	;volatile
   751  007F8E  D002               	goto	l1573
   752  007F90  0E01               	movlw	1
   753  007F92  6E12               	movwf	_GetKey$134,c
   754  007F94                     l1573:
   755  007F94  C023  F004         	movff	_arr+12,Print_key@a
   756  007F98  5012               	movf	_GetKey$134,w,c
   757  007F9A  ECA2  F03E         	call	_Print_key
   758  007F9E  0900               	iorlw	0
   759  007FA0  A4D8               	btfss	status,2,c
   760  007FA2  D02D               	goto	l130
   761                           
   762                           ;keyFn.c: 171: else if(Print_key((!PORTBbits.RB6)&&(!PORTBbits.RB0), arr[3][1]))
   763                           
   764                           ;keyFn.c: 170: break;
   765  007FA4  0E00               	movlw	0
   766  007FA6  6E13               	movwf	_GetKey$135,c
   767  007FA8  AC81               	btfss	3969,6,c	;volatile
   768  007FAA  B081               	btfsc	3969,0,c	;volatile
   769  007FAC  D002               	goto	l1587
   770  007FAE  0E01               	movlw	1
   771  007FB0  6E13               	movwf	_GetKey$135,c
   772  007FB2                     l1587:
   773  007FB2  C024  F004         	movff	_arr+13,Print_key@a
   774  007FB6  5013               	movf	_GetKey$135,w,c
   775  007FB8  ECA2  F03E         	call	_Print_key
   776  007FBC  0900               	iorlw	0
   777  007FBE  A4D8               	btfss	status,2,c
   778  007FC0  D01E               	goto	l130
   779                           
   780                           ;keyFn.c: 173: else if(Print_key((!PORTBbits.RB5)&&(!PORTBbits.RB0), arr[3][2]))
   781                           
   782                           ;keyFn.c: 172: break;
   783  007FC2  0E00               	movlw	0
   784  007FC4  6E14               	movwf	_GetKey$136,c
   785  007FC6  AA81               	btfss	3969,5,c	;volatile
   786  007FC8  B081               	btfsc	3969,0,c	;volatile
   787  007FCA  D002               	goto	l1601
   788  007FCC  0E01               	movlw	1
   789  007FCE  6E14               	movwf	_GetKey$136,c
   790  007FD0                     l1601:
   791  007FD0  C025  F004         	movff	_arr+14,Print_key@a
   792  007FD4  5014               	movf	_GetKey$136,w,c
   793  007FD6  ECA2  F03E         	call	_Print_key
   794  007FDA  0900               	iorlw	0
   795  007FDC  A4D8               	btfss	status,2,c
   796  007FDE  D00F               	goto	l130
   797                           
   798                           ;keyFn.c: 175: else if(Print_key((!PORTBbits.RB4)&&(!PORTBbits.RB0), arr[3][3]))
   799                           
   800                           ;keyFn.c: 174: break;
   801  007FE0  0E00               	movlw	0
   802  007FE2  6E15               	movwf	_GetKey$137,c
   803  007FE4  A881               	btfss	3969,4,c	;volatile
   804  007FE6  B081               	btfsc	3969,0,c	;volatile
   805  007FE8  D002               	goto	l1615
   806  007FEA  0E01               	movlw	1
   807  007FEC  6E15               	movwf	_GetKey$137,c
   808  007FEE                     l1615:
   809  007FEE  C026  F004         	movff	_arr+15,Print_key@a
   810  007FF2  5015               	movf	_GetKey$137,w,c
   811  007FF4  ECA2  F03E         	call	_Print_key
   812  007FF8  0900               	iorlw	0
   813  007FFA  B4D8               	btfsc	status,2,c
   814  007FFC  D708               	goto	l1403
   815  007FFE                     l130:
   816  007FFE  0012               	return	
   817  008000                     __end_of_GetKey:
   818                           	opt stack 0
   819                           tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           intcon2	equ	0xFF1
   824                           postinc0	equ	0xFEE
   825                           postdec1	equ	0xFE5
   826                           fsr1l	equ	0xFE1
   827                           status	equ	0xFD8
   828                           
   829 ;; *************** function _Print_key *****************
   830 ;; Defined at:
   831 ;;		line 88 in file "keyFn.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  element         1    wreg     unsigned char 
   834 ;;  a               1    3[COMRAM] unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  element         1    4[COMRAM] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   846 ;;      Params:         1       0       0       0       0       0       0       0       0
   847 ;;      Locals:         1       0       0       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0
   849 ;;      Totals:         2       0       0       0       0       0       0       0       0
   850 ;;Total ram usage:        2 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    2
   853 ;; This function calls:
   854 ;;		_Write
   855 ;;		_delay_ms
   856 ;; This function is called by:
   857 ;;		_GetKey
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text3
   862  007D44                     __ptext3:
   863                           	opt stack 0
   864  007D44                     _Print_key:
   865                           	opt stack 27
   866                           
   867                           ;incstack = 0
   868                           ;Print_key@element stored from wreg
   869  007D44  6E05               	movwf	Print_key@element,c
   870                           
   871                           ;keyFn.c: 90: if(element)
   872  007D46  5005               	movf	Print_key@element,w,c
   873  007D48  B4D8               	btfsc	status,2,c
   874  007D4A  D011               	goto	l1373
   875                           
   876                           ;keyFn.c: 91: {
   877                           ;keyFn.c: 92: delay_ms(10);
   878  007D4C  0E0A               	movlw	10
   879  007D4E  EC66  F03E         	call	_delay_ms
   880                           
   881                           ;keyFn.c: 93: if (element)
   882  007D52  5005               	movf	Print_key@element,w,c
   883  007D54  B4D8               	btfsc	status,2,c
   884  007D56  D00B               	goto	l1373
   885                           
   886                           ;keyFn.c: 94: {
   887                           ;keyFn.c: 95: delay_ms(10);
   888  007D58  0E0A               	movlw	10
   889  007D5A  EC66  F03E         	call	_delay_ms
   890                           
   891                           ;keyFn.c: 96: if (element)
   892  007D5E  5005               	movf	Print_key@element,w,c
   893  007D60  B4D8               	btfsc	status,2,c
   894  007D62  D005               	goto	l1373
   895                           
   896                           ;keyFn.c: 97: {
   897                           ;keyFn.c: 98: Write(a);
   898  007D64  5004               	movf	Print_key@a,w,c
   899  007D66  EC3D  F03E         	call	_Write
   900                           
   901                           ;keyFn.c: 99: return(1);
   902  007D6A  0E01               	movlw	1
   903  007D6C  D001               	goto	l60
   904  007D6E                     l1373:
   905                           
   906                           ;keyFn.c: 100: }
   907                           ;keyFn.c: 101: }
   908                           ;keyFn.c: 102: }
   909                           ;keyFn.c: 103: return(0);
   910  007D6E  0E00               	movlw	0
   911  007D70                     l60:
   912  007D70  0012               	return	
   913  007D72                     __end_of_Print_key:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           intcon2	equ	0xFF1
   920                           postinc0	equ	0xFEE
   921                           postdec1	equ	0xFE5
   922                           fsr1l	equ	0xFE1
   923                           status	equ	0xFD8
   924                           
   925 ;; *************** function _delay_ms *****************
   926 ;; Defined at:
   927 ;;		line 17 in file "delay.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  t               1    wreg     unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  t               1    1[COMRAM] unsigned char 
   932 ;;  i               1    2[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;		None               void
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         0       0       0       0       0       0       0       0       0
   943 ;;      Locals:         2       0       0       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0
   945 ;;      Totals:         2       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:        2 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    1
   949 ;; This function calls:
   950 ;;		_Delay1KTCYx
   951 ;; This function is called by:
   952 ;;		_Print_key
   953 ;;		_GetKey
   954 ;;		_Delay_s
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text4
   959  007CCC                     __ptext4:
   960                           	opt stack 0
   961  007CCC                     _delay_ms:
   962                           	opt stack 28
   963                           
   964                           ;incstack = 0
   965                           ;delay_ms@t stored from wreg
   966  007CCC  6E02               	movwf	delay_ms@t,c
   967                           
   968                           ;delay.c: 19: unsigned char i;
   969                           ;delay.c: 20: for (i=0;i<=t;i++)
   970  007CCE  0E00               	movlw	0
   971  007CD0  6E03               	movwf	delay_ms@i,c
   972  007CD2  D004               	goto	l1353
   973  007CD4                     l1349:
   974                           
   975                           ;delay.c: 21: Delay1KTCYx(5);
   976  007CD4  0E05               	movlw	5
   977  007CD6  EC4C  F03E         	call	_Delay1KTCYx
   978  007CDA  2A03               	incf	delay_ms@i,f,c
   979  007CDC                     l1353:
   980  007CDC  5003               	movf	delay_ms@i,w,c
   981  007CDE  5C02               	subwf	delay_ms@t,w,c
   982  007CE0  A0D8               	btfss	status,0,c
   983                           
   984                           ;delay.c: 25: return;
   985  007CE2  0012               	return	
   986  007CE4  D7F7               	goto	l1349
   987  007CE6                     __end_of_delay_ms:
   988                           	opt stack 0
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           intcon2	equ	0xFF1
   994                           postinc0	equ	0xFEE
   995                           postdec1	equ	0xFE5
   996                           fsr1l	equ	0xFE1
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _Delay1KTCYx *****************
  1000 ;; Defined at:
  1001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  unit            1    wreg     unsigned char 
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;  unit            1    0[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;		None               void
  1008 ;; Registers used:
  1009 ;;		wreg
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0
  1016 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1018 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1019 ;;Total ram usage:        1 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_delay_ms
  1025 ;;		_delay_us
  1026 ;;		_DelayPORXLCD
  1027 ;;		_DelayXLCD
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text5
  1032  007C98                     __ptext5:
  1033                           	opt stack 0
  1034  007C98                     _Delay1KTCYx:
  1035                           	opt stack 29
  1036                           
  1037                           ;incstack = 0
  1038                           ;Delay1KTCYx@unit stored from wreg
  1039  007C98  6E01               	movwf	Delay1KTCYx@unit,c
  1040  007C9A                     l538:
  1041  007C9A  0EFA               	movlw	250
  1042  007C9C                     u1587:
  1043  007C9C  F000               	nop	
  1044  007C9E  2EE8               	decfsz	wreg,f,c
  1045  007CA0  D7FD               	goto	u1587
  1046  007CA2  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1047  007CA4  D7FA               	goto	l538
  1048  007CA6  0012               	return	
  1049  007CA8                     __end_of_Delay1KTCYx:
  1050                           	opt stack 0
  1051                           tblptru	equ	0xFF8
  1052                           tblptrh	equ	0xFF7
  1053                           tblptrl	equ	0xFF6
  1054                           tablat	equ	0xFF5
  1055                           intcon2	equ	0xFF1
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           postdec1	equ	0xFE5
  1059                           fsr1l	equ	0xFE1
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _Write *****************
  1063 ;; Defined at:
  1064 ;;		line 41 in file "uart.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  data            1    wreg     unsigned char 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  data            1    1[COMRAM] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         0       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        1 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    1
  1085 ;; This function calls:
  1086 ;;		_WriteUSART
  1087 ;; This function is called by:
  1088 ;;		_Print_key
  1089 ;;		_Read_string
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text6
  1094  007C7A                     __ptext6:
  1095                           	opt stack 0
  1096  007C7A                     _Write:
  1097                           	opt stack 27
  1098                           
  1099                           ;incstack = 0
  1100                           ;Write@data stored from wreg
  1101  007C7A  6E02               	movwf	Write@data,c
  1102                           
  1103                           ;uart.c: 43: WriteUSART(data);
  1104  007C7C  5002               	movf	Write@data,w,c
  1105  007C7E  EC5D  F03E         	call	_WriteUSART
  1106  007C82                     l186:
  1107  007C82  B2AC               	btfsc	4012,1,c	;volatile
  1108  007C84  0012               	return	
  1109  007C86  D7FD               	goto	l186
  1110  007C88                     __end_of_Write:
  1111                           	opt stack 0
  1112                           tblptru	equ	0xFF8
  1113                           tblptrh	equ	0xFF7
  1114                           tblptrl	equ	0xFF6
  1115                           tablat	equ	0xFF5
  1116                           intcon2	equ	0xFF1
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1l	equ	0xFE1
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _WriteUSART *****************
  1124 ;; Defined at:
  1125 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uwrite.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  data            1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  data            1    0[COMRAM] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;		None               void
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_Write
  1149 ;;		_Read_string
  1150 ;;		_Read_str_
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text7
  1155  007CBA                     __ptext7:
  1156                           	opt stack 0
  1157  007CBA                     _WriteUSART:
  1158                           	opt stack 27
  1159                           
  1160                           ;incstack = 0
  1161                           ;WriteUSART@data stored from wreg
  1162  007CBA  6E01               	movwf	WriteUSART@data,c
  1163  007CBC  ACAC               	btfss	4012,6,c	;volatile
  1164  007CBE  D003               	goto	l1345
  1165  007CC0  90AC               	bcf	4012,0,c	;volatile
  1166  007CC2  B228               	btfsc	_USART_Status,1,c
  1167  007CC4  80AC               	bsf	4012,0,c	;volatile
  1168  007CC6                     l1345:
  1169  007CC6  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  1170  007CCA  0012               	return	
  1171  007CCC                     __end_of_WriteUSART:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           intcon2	equ	0xFF1
  1178                           postinc0	equ	0xFEE
  1179                           wreg	equ	0xFE8
  1180                           postdec1	equ	0xFE5
  1181                           fsr1l	equ	0xFE1
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function _ConfigUSART *****************
  1185 ;; Defined at:
  1186 ;;		line 18 in file "uart.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  config_1        1    wreg     unsigned char 
  1189 ;;  config_2        1    6[COMRAM] unsigned char 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  config_1        1    7[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;		None               void
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1201 ;;      Params:         1       0       0       0       0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1204 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1205 ;;Total ram usage:        2 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    1
  1208 ;; This function calls:
  1209 ;;		_OpenUSART
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text8
  1216  007C88                     __ptext8:
  1217                           	opt stack 0
  1218  007C88                     _ConfigUSART:
  1219                           	opt stack 29
  1220                           
  1221                           ;incstack = 0
  1222                           ;ConfigUSART@config_1 stored from wreg
  1223  007C88  6E08               	movwf	ConfigUSART@config_1,c
  1224                           
  1225                           ;uart.c: 20: OpenUSART(config_1, config_2);
  1226  007C8A  C007  F001         	movff	ConfigUSART@config_2,OpenUSART@spbrg
  1227  007C8E  6A02               	clrf	OpenUSART@spbrg+1,c
  1228  007C90  5008               	movf	ConfigUSART@config_1,w,c
  1229  007C92  ECB9  F03E         	call	_OpenUSART
  1230  007C96  0012               	return	
  1231  007C98                     __end_of_ConfigUSART:
  1232                           	opt stack 0
  1233                           tblptru	equ	0xFF8
  1234                           tblptrh	equ	0xFF7
  1235                           tblptrl	equ	0xFF6
  1236                           tablat	equ	0xFF5
  1237                           intcon2	equ	0xFF1
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           postdec1	equ	0xFE5
  1241                           fsr1l	equ	0xFE1
  1242                           status	equ	0xFD8
  1243                           
  1244 ;; *************** function _OpenUSART *****************
  1245 ;; Defined at:
  1246 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  config          1    wreg     unsigned char 
  1249 ;;  spbrg           2    0[COMRAM] unsigned int 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  config          1    5[COMRAM] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;		None               void
  1254 ;; Registers used:
  1255 ;;		wreg, status,2
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1261 ;;      Params:         2       0       0       0       0       0       0       0       0
  1262 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1263 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1264 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1265 ;;Total ram usage:        6 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_ConfigUSART
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text9
  1275  007D72                     __ptext9:
  1276                           	opt stack 0
  1277  007D72                     _OpenUSART:
  1278                           	opt stack 29
  1279                           
  1280                           ;incstack = 0
  1281                           ;OpenUSART@config stored from wreg
  1282  007D72  6E06               	movwf	OpenUSART@config,c
  1283  007D74  0E00               	movlw	0
  1284  007D76  6EAC               	movwf	4012,c	;volatile
  1285  007D78  0E00               	movlw	0
  1286  007D7A  6EAB               	movwf	4011,c	;volatile
  1287  007D7C  B006               	btfsc	OpenUSART@config,0,c
  1288  007D7E  88AC               	bsf	4012,4,c	;volatile
  1289  007D80  A206               	btfss	OpenUSART@config,1,c
  1290  007D82  D002               	goto	l949
  1291  007D84  8CAC               	bsf	4012,6,c	;volatile
  1292  007D86  8CAB               	bsf	4011,6,c	;volatile
  1293  007D88                     l949:
  1294  007D88  B406               	btfsc	OpenUSART@config,2,c
  1295  007D8A  8EAC               	bsf	4012,7,c	;volatile
  1296  007D8C  A606               	btfss	OpenUSART@config,3,c
  1297  007D8E  D002               	goto	l253
  1298  007D90  88AB               	bsf	4011,4,c	;volatile
  1299  007D92  D001               	goto	l957
  1300  007D94                     l253:
  1301  007D94  8AAB               	bsf	4011,5,c	;volatile
  1302  007D96                     l957:
  1303  007D96  B806               	btfsc	OpenUSART@config,4,c
  1304  007D98  84AC               	bsf	4012,2,c	;volatile
  1305  007D9A  989E               	bcf	3998,4,c	;volatile
  1306  007D9C  BA06               	btfsc	OpenUSART@config,5,c
  1307  007D9E  86AB               	bsf	4011,3,c	;volatile
  1308  007DA0  AC06               	btfss	OpenUSART@config,6,c
  1309  007DA2  D002               	goto	l257
  1310  007DA4  8A9D               	bsf	3997,5,c	;volatile
  1311  007DA6  D001               	goto	l258
  1312  007DA8                     l257:
  1313  007DA8  9A9D               	bcf	3997,5,c	;volatile
  1314  007DAA                     l258:
  1315  007DAA  9A9E               	bcf	3998,5,c	;volatile
  1316  007DAC  AE06               	btfss	OpenUSART@config,7,c
  1317  007DAE  D002               	goto	l259
  1318  007DB0  889D               	bsf	3997,4,c	;volatile
  1319  007DB2  D001               	goto	l260
  1320  007DB4                     l259:
  1321  007DB4  989D               	bcf	3997,4,c	;volatile
  1322  007DB6                     l260:
  1323  007DB6  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1324  007DBA  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1325  007DBE  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  1326  007DC2  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  1327  007DC4  5004               	movf	??_OpenUSART+1,w,c
  1328  007DC6  6EB0               	movwf	4016,c	;volatile
  1329  007DC8  8AAC               	bsf	4012,5,c	;volatile
  1330  007DCA  8EAB               	bsf	4011,7,c	;volatile
  1331  007DCC  9C94               	bcf	3988,6,c	;volatile
  1332  007DCE  8E94               	bsf	3988,7,c	;volatile
  1333  007DD0  B8AC               	btfsc	4012,4,c	;volatile
  1334  007DD2  BEAC               	btfsc	4012,7,c	;volatile
  1335  007DD4  D001               	goto	l262
  1336  007DD6  8C94               	bsf	3988,6,c	;volatile
  1337  007DD8                     l262:
  1338  007DD8  0012               	return	
  1339  007DDA                     __end_of_OpenUSART:
  1340                           	opt stack 0
  1341  0000                     tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           intcon2	equ	0xFF1
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           status	equ	0xFD8
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           intcon2	equ	0xFF1
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           status	equ	0xFD8
  1361                           
  1362                           	psect	rparam
  1363  0000                     tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           intcon2	equ	0xFF1
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     22      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_GetKey
    _delay_us->_Delay1KTCYx
    _GetKey->_Print_key
    _Print_key->_delay_ms
    _delay_ms->_Delay1KTCYx
    _Write->_WriteUSART
    _ConfigUSART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1704
                        _ConfigUSART
                             _GetKey
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _delay_us                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (1) _GetKey                                              17    17      0    1388
                                              5 COMRAM    17    17      0
                          _Print_key
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Print_key                                            2     1      1     888
                                              3 COMRAM     2     1      1
                              _Write
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     2      0      68
                                              1 COMRAM     2     2      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Write                                                1     1      0      44
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (4) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigUSART                                          2     1      1     248
                                              6 COMRAM     2     1      1
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     184
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigUSART
     _OpenUSART
   _GetKey
     _Print_key
       _Write
         _WriteUSART
       _delay_ms
         _Delay1KTCYx
     _delay_ms
       _Delay1KTCYx
   _delay_us
     _Delay1KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     16      28       1       42.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      20        0.0%
DATA                 0      0      28       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Sep 22 15:33:11 2014

                     l60 7D70                       l63 7DDE              __CFG_BORV$3 000000  
                    l130 7FFE                      l260 7DB6                      l253 7D94  
                    l262 7DD8                      l257 7DA8                      l258 7DAA  
                    l186 7C82                      l259 7DB4                      l538 7C9A  
                    l957 7D96                      l949 7D88             __CFG_BOR$OFF 000000  
                    _arr 0017                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1411 7E20  
                   l1403 7E0E                     l1345 7CC6                     l1353 7CDC  
                   l1601 7FD0                     l1425 7E3E                     l1507 7EF6  
                   l1349 7CD4                     l1373 7D6E                     l1533 7F36  
                   l1453 7E7A                     l1615 7FEE                     l1519 7F18  
                   l1439 7E5C                     l1383 7CF6                     l1561 7F72  
                   l1465 7E9C                     l1547 7F54                     l1395 7DF8  
                   l1379 7CEE                     l1573 7F94                     l1493 7ED8  
                   l1479 7EBA                     l1587 7FB2                     l1659 7D10  
                   u1587 7C9C                     _RBPU 007F8F                     _main 7D00  
                   fsr1l 000FE1               _GetKey$130 000E               _GetKey$122 0006  
             _GetKey$131 000F               _GetKey$123 0007               _GetKey$132 0010  
             _GetKey$124 0008               _GetKey$133 0011               _GetKey$125 0009  
             _GetKey$134 0012               _GetKey$126 000A               _GetKey$135 0013  
             _GetKey$127 000B               _GetKey$136 0014               _GetKey$128 000C  
             _GetKey$137 0015               _GetKey$129 000D                     start 0000  
          __CFG_IESO$OFF 000000      __end_of_ConfigUSART 7C98            __CFG_MCLRE$ON 000000  
            _Delay1KTCYx 7C98            __CFG_PLLDIV$5 000000                    ?_main 0001  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTB 000F81            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISD 000F95                    _TXREG 000FAD                    _TXSTA 000FAC  
          __CFG_PWRT$OFF 000000           __CFG_FCMEN$OFF 000000                    _Write 7C7A  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
         WriteUSART@data 0001          __initialization 7D1C             __end_of_main 7D1C  
                 ??_main 0017            __activetblptr 000000          __CFG_CCP2MX$OFF 000000  
                 ?_Write 0001              _ConfigUSART 7C88                   _SPBRGH 000FB0  
                 _GetKey 7DDA         __end_of_delay_ms 7CE6         __end_of_delay_us 7D00  
         __CFG_XINST$OFF 000000       __size_of_OpenUSART 0068           __CFG_STVREN$ON 000000  
             Print_key@a 0004             __pdataCOMRAM 0017       __size_of_Print_key 002E  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7D3E          __CFG_PBADEN$OFF 000000  
             _WriteUSART 7CBA           __pcstackCOMRAM 0001            __end_of_Write 7C88  
                ??_Write 0002        __end_of_OpenUSART 7DDA                  ?_GetKey 0001  
      __end_of_Print_key 7D72             ?_Delay1KTCYx 0001         Print_key@element 0005  
              ?_delay_ms 0001                ?_delay_us 0001          __CFG_VREGEN$OFF 000000  
        __size_of_GetKey 0226                  __Hparam 0000                  __Lparam 0000  
            ?_WriteUSART 0001                  __pcinit 7D1C                  __ramtop 0800  
                __ptext0 7D00                  __ptext1 7CE6                  __ptext2 7DDA  
                __ptext3 7D44                  __ptext4 7CCC                  __ptext5 7C98  
                __ptext6 7C7A                  __ptext7 7CBA                  __ptext8 7C88  
                __ptext9 7D72               ??_delay_ms 0002               ??_delay_us 0002  
   end_of_initialization 7D3E             ?_ConfigUSART 0007      ConfigUSART@config_1 0008  
    ConfigUSART@config_2 0007                GetKey@row 0016                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
              _TRISCbits 000F94      __size_of_WriteUSART 0012                _TXSTAbits 000FAC  
         __end_of_GetKey 8000            __pidataCOMRAM 7CA9     __size_of_Delay1KTCYx 0010  
    start_initialization 7D1C                _OpenUSART 7D72                 ??_GetKey 0006  
              _Print_key 7D44         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0028  
      __size_of_delay_ms 001A        __size_of_delay_us 001A          Delay1KTCYx@unit 0001  
             ?_OpenUSART 0001     __size_of_ConfigUSART 0010                Write@data 0002  
           ??_WriteUSART 0001               ?_Print_key 0004           __size_of_Write 000E  
     __end_of_WriteUSART 7CCC                delay_ms@i 0003                delay_ms@t 0002  
              delay_us@i 0003                delay_us@t 0002                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                copy_data0 7D32  
            ??_OpenUSART 0003          OpenUSART@config 0006                 __Hrparam 0000  
               __Lrparam 0000              ??_Print_key 0005                 _delay_ms 7CCC  
               _delay_us 7CE6                 _config_1 0027            __size_of_main 001C  
          ??_Delay1KTCYx 0001    __CFG_CPUDIV$OSC1_PLL2 000000           OpenUSART@spbrg 0001  
    __end_of_Delay1KTCYx 7CA8            ??_ConfigUSART 0008             _USART_Status 0028  
